# Задача 39. Даны два массива чисел. Требуется вывести те элементы первого массива (в том порядке, в каком они идут в первом массиве), которых нет во втором массиве. Пользователь вводит
# число N - количество элементов в первом массиве, затем N чисел - элементы массива. Затем число M - количество элементов во втором массиве. 
# Затем элементы второго массива

# n = int(input("Введите количество элементов первого массива: "))
# a = list(map(int, input().split()))

# m = int(input("Введите количество элементов второго массива: "))
# b = list(map(int, input().split()))


# result = []

# for i in a:
#     if i not in b:
#         result.append(i)

# print(result)

# Задача 41. Дан массив, состоящий из целых чисел. Напишите программу, которая в данном массиве определит количество элементов,
# у которых два соседних и, при этом, оба соседних элемента меньше данного. Сначала вводится число N — количество
# элементов в массиве Далее записаны N чисел — элементы массива. Массив состоит из целых чисел.

# def bigger_than(lst):
#     count = 0
#     for i in range(1, len(lst) - 1):
#         if lst[i - 1] < lst[i] > lst[i + 1]:
#             count += 1
#     return count


# nums = [int(input(f'Введите элемент множества номер {i + 1}: ')) for i in range(int(input('Введите размер множества: ')))]
# print(bigger_than(nums))

# Задача 43. Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу. Считается, что любые два элемента,
# равные друг другу образуют одну пару, которую необходимо посчитать. Вводится список чисел. Все числа списка
# находятся на разных строках.
# Ввод: 1 2 3 2 3
# Вывод: 2

# a = list(map(int, input('Введите элементы: ').split()))

# count = 0
# for i in range(len(a)):
#     for j in range(i+1, len(a)):
#         if a[i] == a[j]:
#             count += 1

# print(count)

# Задача 45. Два различных натуральных числа n и m называются дружественными, если сумма делителей числа n (включая 1, но исключая само n) равна числу m и наоборот. Например, 220 и 284 – дружественные числа. По данному числу k
# выведите все пары дружественных чисел, каждое из которых не превосходит k. Программа получает на вход одно натуральное число k, не превосходящее 10^5. Программа должна вывести  все пары дружественных чисел,
# каждое из которых не превосходит k. Пары необходимо выводить по одной в строке, разделяя пробелами. Каждая пара должна быть выведена только один раз (перестановка чисел новую пару не дает).
# Ввод: 300
# Вывод: 220 284

# Первое решение
# def sum_num(k):
#     sum1 = 0
#     for i in range(1, (k // 2) + 1):
#         if k % i == 0:
#             sum1 += i
#     return sum1


# k = int(input('Введите число: '))
# for i in range(1, k):
#     j = sum_num(i)
#     if i < j < k and i == sum_num(j):
#         print(i, j)

# Второе решение

# def sum_divide(number):
#     sum_divide, i = 0, 1
#     while i < number:
#         if number % i == 0:
#             sum_divide += i
#         i += 1
#     return sum_divide


# k, i = 300, 1
# while i < k:
#     j = sum_divide(i)
#     if i < j < k and i == sum_divide(j):
#         print(f'{i} {j}')
#     i += 1
